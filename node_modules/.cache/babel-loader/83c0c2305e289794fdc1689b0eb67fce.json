{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh_HD_Data/Lukman_File/Project/react js/new hitachi/hitachi-react/src/component/Location.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport LandingPage from './LandingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '30ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '30ch'\n  }\n}));\n\nfunction Location() {\n  _s();\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [flag, setFlag] = useState(false);\n  const classes = useStyles();\n  const defaultApiKey = 'ff9f895b2e884d6680530135202710';\n  const [city, setCity] = useState('');\n  const [open, setOpen] = useState(false);\n  const [celc, setCelc] = useState('');\n  const [fahr, setFahr] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const handleChange = event => {\n    setCity(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    fetch(\"http://api.weatherapi.com/v1/current.json?key= \" + defaultApiKey + \"&q=\" + city).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setCelc(result.current.temp_c);\n      setFahr(result.current.temp_f);\n      setFlag(true);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const redux = require('redux');\n\n  const createStore = redux.createStore;\n  const initState = {\n    celc,\n    fahr\n  };\n\n  const rootReducer = (state = initState, action) => {\n    return state;\n  };\n\n  const store = createStore(rootReducer);\n  console.log(store.getState());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: flag ? /*#__PURE__*/_jsxDEV(LandingPage, {\n      celc: celc,\n      fahr: fahr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        readOnly: true,\n        label: \"Your API Key\",\n        value: defaultApiKey,\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 121\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        color: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-controlled-open-select-label\",\n          children: \"City Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-controlled-open-select-label\",\n          id: \"demo-controlled-open-select\",\n          open: open,\n          onClose: handleClose,\n          onOpen: handleOpen,\n          value: city,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'Kuala Lumpur',\n            children: \"Kuala Lumpur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'Singapore',\n            children: \"Singapore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 63\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Location, \"LCwF+oSvVs0pfbSVSgQig6ZVlNA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Volumes/Macintosh_HD_Data/Lukman_File/Project/react js/new hitachi/hitachi-react/src/component/Location.js"],"names":["React","useState","makeStyles","TextField","Button","InputLabel","MenuItem","FormControl","Select","LandingPage","useStyles","theme","root","margin","spacing","width","formControl","minWidth","Location","flag","setFlag","classes","defaultApiKey","city","setCity","open","setOpen","celc","setCelc","fahr","setFahr","error","setError","isLoaded","setIsLoaded","handleChange","event","target","value","handleClose","handleSubmit","fetch","then","res","json","result","current","temp_c","temp_f","handleOpen","redux","require","createStore","initState","rootReducer","state","action","store","console","log","getState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport LandingPage from './LandingPage';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '30ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '30ch',\n    },\n}));\n\nfunction Location() {\n    // Declare a new state variable, which we'll call \"count\"\n    const [flag, setFlag] = useState(false);\n    const classes = useStyles();\n    const defaultApiKey = 'ff9f895b2e884d6680530135202710';\n    const [city, setCity] = useState('');\n    const [open, setOpen] = useState(false);\n    const [celc, setCelc] = useState('');\n    const [fahr, setFahr] = useState('');\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const handleChange = (event) => {\n        setCity(event.target.value);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSubmit = () => {\n        fetch(\"http://api.weatherapi.com/v1/current.json?key= \" + defaultApiKey + \"&q=\" + city)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setCelc(result.current.temp_c)\n                    setFahr(result.current.temp_f)\n                    setFlag(true)\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const redux = require('redux');\n    const createStore = redux.createStore;\n\n    const initState = {\n        celc,\n        fahr\n    }\n\n    const rootReducer = (state = initState, action) => {\n        return state;\n    }\n\n    const store = createStore(rootReducer);\n    console.log(store.getState());\n\n    return (\n        <div>\n            {flag ? <LandingPage celc={celc} fahr={fahr} /> : <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField id=\"standard-basic\" readOnly label=\"Your API Key\" value={defaultApiKey} color=\"secondary\" /> <br />\n                <FormControl className={classes.formControl} color=\"secondary\">\n                    <InputLabel id=\"demo-controlled-open-select-label\">City Name</InputLabel>\n                    <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        value={city}\n                        onChange={handleChange}>\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={'Kuala Lumpur'}>Kuala Lumpur</MenuItem>\n                        <MenuItem value={'Singapore'}>Singapore</MenuItem>\n                    </Select>\n                </FormControl> <br />\n                <Button onClick={handleSubmit}\n                    variant=\"contained\" color=\"secondary\">\n                    Submit\n                </Button>\n            </form>}\n        </div>\n    );\n}\n\nexport default Location"]},"metadata":{},"sourceType":"module"}